function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var hasRequiredReact_production_min,react={exports:{}},react_production_min={};function requireReact_production_min(){if(hasRequiredReact_production_min)return react_production_min;hasRequiredReact_production_min=1;var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a,this.context=b,this.refs=D,this.updater=e||B}function F(){}function G(a,b,e){this.props=a,this.context=b,this.refs=D,this.updater=e||B}E.prototype.isReactComponent={},E.prototype.setState=function(a,b){if("object"!=typeof a&&"function"!=typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")},E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")},F.prototype=E.prototype;var H=G.prototype=new F;H.constructor=G,C(H,E.prototype),H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}function O(a){return"object"==typeof a&&null!==a&&a.$$typeof===l}var P=/\/+/g;function Q(a,b){return"object"==typeof a&&null!==a&&null!=a.key?function(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,(function(a2){return b[a2]}))}(""+a.key):b.toString(36)}function R(a,b,e,d,c){var k=typeof a;"undefined"!==k&&"boolean"!==k||(a=null);var h=!1;if(null===a)h=!0;else switch(k){case"string":case"number":h=!0;break;case"object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return c=c(h=a),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",(function(a2){return a2}))):null!=c&&(O(c)&&(c=function(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;if(h=0,d=""===d?".":d+":",I(a))for(var g=0;g<a.length;g++){var f=d+Q(k=a[g],g);h+=R(k,b,e,f,c)}else if(f=function(a){return null===a||"object"!=typeof a?null:"function"==typeof(a=z&&a[z]||a["@@iterator"])?a:null}(a),"function"==typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)h+=R(k=k.value,b,e,f=d+Q(k,g++),c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}function S(a,b,e){if(null==a)return a;var d=[],c=0;return R(a,d,"","",(function(a2){return b.call(e,a2,c++)})),d}function T(a){if(-1===a._status){var b=a._result;(b=b()).then((function(b2){0!==a._status&&-1!==a._status||(a._status=1,a._result=b2)}),(function(b2){0!==a._status&&-1!==a._status||(a._status=2,a._result=b2)})),-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result}var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};return react_production_min.Children={map:S,forEach:function(a,b,e){S(a,(function(){b.apply(this,arguments)}),e)},count:function(a){var b=0;return S(a,(function(){b++})),b},toArray:function(a){return S(a,(function(a2){return a2}))||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}},react_production_min.Component=E,react_production_min.Fragment=p,react_production_min.Profiler=r,react_production_min.PureComponent=G,react_production_min.StrictMode=q,react_production_min.Suspense=w,react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,react_production_min.cloneElement=function(a,b,e){if(null==a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){if(void 0!==b.ref&&(k=b.ref,h=K.current),void 0!==b.key&&(c=""+b.key),a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}},react_production_min.createContext=function(a){return(a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:t,_context:a},a.Consumer=a},react_production_min.createElement=M,react_production_min.createFactory=function(a){var b=M.bind(null,a);return b.type=a,b},react_production_min.createRef=function(){return{current:null}},react_production_min.forwardRef=function(a){return{$$typeof:v,render:a}},react_production_min.isValidElement=O,react_production_min.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}},react_production_min.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}},react_production_min.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}},react_production_min.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},react_production_min.useCallback=function(a,b){return U.current.useCallback(a,b)},react_production_min.useContext=function(a){return U.current.useContext(a)},react_production_min.useDebugValue=function(){},react_production_min.useDeferredValue=function(a){return U.current.useDeferredValue(a)},react_production_min.useEffect=function(a,b){return U.current.useEffect(a,b)},react_production_min.useId=function(){return U.current.useId()},react_production_min.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)},react_production_min.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)},react_production_min.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)},react_production_min.useMemo=function(a,b){return U.current.useMemo(a,b)},react_production_min.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)},react_production_min.useRef=function(a){return U.current.useRef(a)},react_production_min.useState=function(a){return U.current.useState(a)},react_production_min.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)},react_production_min.useTransition=function(){return U.current.useTransition()},react_production_min.version="18.2.0",react_production_min}var hasRequiredReact_development,react_development={exports:{}};
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function requireReact_development(){return hasRequiredReact_development||(hasRequiredReact_development=1,module=react_development,exports=react_development.exports,"production"!==process.env.NODE_ENV&&function(){"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error);var REACT_ELEMENT_TYPE=Symbol.for("react.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_PROVIDER_TYPE=Symbol.for("react.provider"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),REACT_OFFSCREEN_TYPE=Symbol.for("react.offscreen"),MAYBE_ITERATOR_SYMBOL=Symbol.iterator;function getIteratorFn(maybeIterable){if(null===maybeIterable||"object"!=typeof maybeIterable)return null;var maybeIterator=MAYBE_ITERATOR_SYMBOL&&maybeIterable[MAYBE_ITERATOR_SYMBOL]||maybeIterable["@@iterator"];return"function"==typeof maybeIterator?maybeIterator:null}var ReactCurrentDispatcher={current:null},ReactCurrentBatchConfig={transition:null},ReactCurrentActQueue={current:null,isBatchingLegacy:!1,didScheduleLegacyUpdate:!1},ReactCurrentOwner={current:null},ReactDebugCurrentFrame={},currentExtraStackFrame=null;function setExtraStackFrame(stack){currentExtraStackFrame=stack}ReactDebugCurrentFrame.setExtraStackFrame=function(stack){currentExtraStackFrame=stack},ReactDebugCurrentFrame.getCurrentStack=null,ReactDebugCurrentFrame.getStackAddendum=function(){var stack="";currentExtraStackFrame&&(stack+=currentExtraStackFrame);var impl=ReactDebugCurrentFrame.getCurrentStack;return impl&&(stack+=impl()||""),stack};var ReactSharedInternals={ReactCurrentDispatcher:ReactCurrentDispatcher,ReactCurrentBatchConfig:ReactCurrentBatchConfig,ReactCurrentOwner:ReactCurrentOwner};function warn(format){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];printWarning("warn",format,args)}function error(format){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];printWarning("error",format,args)}function printWarning(level,format,args){var stack=ReactSharedInternals.ReactDebugCurrentFrame.getStackAddendum();""!==stack&&(format+="%s",args=args.concat([stack]));var argsWithFormat=args.map((function(item){return String(item)}));argsWithFormat.unshift("Warning: "+format),Function.prototype.apply.call(console[level],console,argsWithFormat)}ReactSharedInternals.ReactDebugCurrentFrame=ReactDebugCurrentFrame,ReactSharedInternals.ReactCurrentActQueue=ReactCurrentActQueue;var didWarnStateUpdateForUnmountedComponent={};function warnNoop(publicInstance,callerName){var _constructor=publicInstance.constructor,componentName=_constructor&&(_constructor.displayName||_constructor.name)||"ReactClass",warningKey=componentName+"."+callerName;didWarnStateUpdateForUnmountedComponent[warningKey]||(error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",callerName,componentName),didWarnStateUpdateForUnmountedComponent[warningKey]=!0)}var ReactNoopUpdateQueue={isMounted:function(publicInstance){return!1},enqueueForceUpdate:function(publicInstance,callback,callerName){warnNoop(publicInstance,"forceUpdate")},enqueueReplaceState:function(publicInstance,completeState,callback,callerName){warnNoop(publicInstance,"replaceState")},enqueueSetState:function(publicInstance,partialState,callback,callerName){warnNoop(publicInstance,"setState")}},assign=Object.assign,emptyObject={};function Component(props,context,updater){this.props=props,this.context=context,this.refs=emptyObject,this.updater=updater||ReactNoopUpdateQueue}Object.freeze(emptyObject),Component.prototype.isReactComponent={},Component.prototype.setState=function(partialState,callback){if("object"!=typeof partialState&&"function"!=typeof partialState&&null!=partialState)throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,partialState,callback,"setState")},Component.prototype.forceUpdate=function(callback){this.updater.enqueueForceUpdate(this,callback,"forceUpdate")};var deprecatedAPIs={isMounted:["isMounted","Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],replaceState:["replaceState","Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]},defineDeprecationWarning=function(methodName,info){Object.defineProperty(Component.prototype,methodName,{get:function(){warn("%s(...) is deprecated in plain JavaScript React classes. %s",info[0],info[1])}})};for(var fnName in deprecatedAPIs)deprecatedAPIs.hasOwnProperty(fnName)&&defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);function ComponentDummy(){}function PureComponent(props,context,updater){this.props=props,this.context=context,this.refs=emptyObject,this.updater=updater||ReactNoopUpdateQueue}ComponentDummy.prototype=Component.prototype;var pureComponentPrototype=PureComponent.prototype=new ComponentDummy;pureComponentPrototype.constructor=PureComponent,assign(pureComponentPrototype,Component.prototype),pureComponentPrototype.isPureReactComponent=!0;var isArrayImpl=Array.isArray;function isArray(a){return isArrayImpl(a)}function testStringCoercion(value){return""+value}function checkKeyStringCoercion(value){if(function(value){try{return testStringCoercion(value),!1}catch(e){return!0}}(value))return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",function(value){return"function"==typeof Symbol&&Symbol.toStringTag&&value[Symbol.toStringTag]||value.constructor.name||"Object"}(value)),testStringCoercion(value)}function getContextName(type){return type.displayName||"Context"}function getComponentNameFromType(type){if(null==type)return null;if("number"==typeof type.tag&&error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."),"function"==typeof type)return type.displayName||type.name||null;if("string"==typeof type)return type;switch(type){case REACT_FRAGMENT_TYPE:return"Fragment";case REACT_PORTAL_TYPE:return"Portal";case REACT_PROFILER_TYPE:return"Profiler";case REACT_STRICT_MODE_TYPE:return"StrictMode";case REACT_SUSPENSE_TYPE:return"Suspense";case REACT_SUSPENSE_LIST_TYPE:return"SuspenseList"}if("object"==typeof type)switch(type.$$typeof){case REACT_CONTEXT_TYPE:return getContextName(type)+".Consumer";case REACT_PROVIDER_TYPE:return getContextName(type._context)+".Provider";case REACT_FORWARD_REF_TYPE:return function(outerType,innerType,wrapperName){var displayName=outerType.displayName;if(displayName)return displayName;var functionName=innerType.displayName||innerType.name||"";return""!==functionName?wrapperName+"("+functionName+")":wrapperName}(type,type.render,"ForwardRef");case REACT_MEMO_TYPE:var outerName=type.displayName||null;return null!==outerName?outerName:getComponentNameFromType(type.type)||"Memo";case REACT_LAZY_TYPE:var lazyComponent=type,payload=lazyComponent._payload,init=lazyComponent._init;try{return getComponentNameFromType(init(payload))}catch(x){return null}}return null}var specialPropKeyWarningShown,specialPropRefWarningShown,didWarnAboutStringRefs,hasOwnProperty=Object.prototype.hasOwnProperty,RESERVED_PROPS={key:!0,ref:!0,__self:!0,__source:!0};function hasValidRef(config){if(hasOwnProperty.call(config,"ref")){var getter=Object.getOwnPropertyDescriptor(config,"ref").get;if(getter&&getter.isReactWarning)return!1}return void 0!==config.ref}function hasValidKey(config){if(hasOwnProperty.call(config,"key")){var getter=Object.getOwnPropertyDescriptor(config,"key").get;if(getter&&getter.isReactWarning)return!1}return void 0!==config.key}didWarnAboutStringRefs={};var ReactElement=function(type,key,ref,self,source,owner,props){var element={$$typeof:REACT_ELEMENT_TYPE,type:type,key:key,ref:ref,props:props,_owner:owner,_store:{}};return Object.defineProperty(element._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(element,"_self",{configurable:!1,enumerable:!1,writable:!1,value:self}),Object.defineProperty(element,"_source",{configurable:!1,enumerable:!1,writable:!1,value:source}),Object.freeze&&(Object.freeze(element.props),Object.freeze(element)),element};function createElement(type,config,children){var propName,props={},key=null,ref=null,self=null,source=null;if(null!=config)for(propName in hasValidRef(config)&&(ref=config.ref,function(config){if("string"==typeof config.ref&&ReactCurrentOwner.current&&config.__self&&ReactCurrentOwner.current.stateNode!==config.__self){var componentName=getComponentNameFromType(ReactCurrentOwner.current.type);didWarnAboutStringRefs[componentName]||(error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',componentName,config.ref),didWarnAboutStringRefs[componentName]=!0)}}(config)),hasValidKey(config)&&(checkKeyStringCoercion(config.key),key=""+config.key),self=void 0===config.__self?null:config.__self,source=void 0===config.__source?null:config.__source,config)hasOwnProperty.call(config,propName)&&!RESERVED_PROPS.hasOwnProperty(propName)&&(props[propName]=config[propName]);var childrenLength=arguments.length-2;if(1===childrenLength)props.children=children;else if(childrenLength>1){for(var childArray=Array(childrenLength),i=0;i<childrenLength;i++)childArray[i]=arguments[i+2];Object.freeze&&Object.freeze(childArray),props.children=childArray}if(type&&type.defaultProps){var defaultProps=type.defaultProps;for(propName in defaultProps)void 0===props[propName]&&(props[propName]=defaultProps[propName])}if(key||ref){var displayName="function"==typeof type?type.displayName||type.name||"Unknown":type;key&&function(props,displayName){var warnAboutAccessingKey=function(){specialPropKeyWarningShown||(specialPropKeyWarningShown=!0,error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",displayName))};warnAboutAccessingKey.isReactWarning=!0,Object.defineProperty(props,"key",{get:warnAboutAccessingKey,configurable:!0})}(props,displayName),ref&&function(props,displayName){var warnAboutAccessingRef=function(){specialPropRefWarningShown||(specialPropRefWarningShown=!0,error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",displayName))};warnAboutAccessingRef.isReactWarning=!0,Object.defineProperty(props,"ref",{get:warnAboutAccessingRef,configurable:!0})}(props,displayName)}return ReactElement(type,key,ref,self,source,ReactCurrentOwner.current,props)}function cloneElement(element,config,children){if(null==element)throw new Error("React.cloneElement(...): The argument must be a React element, but you passed "+element+".");var propName,defaultProps,props=assign({},element.props),key=element.key,ref=element.ref,self=element._self,source=element._source,owner=element._owner;if(null!=config)for(propName in hasValidRef(config)&&(ref=config.ref,owner=ReactCurrentOwner.current),hasValidKey(config)&&(checkKeyStringCoercion(config.key),key=""+config.key),element.type&&element.type.defaultProps&&(defaultProps=element.type.defaultProps),config)hasOwnProperty.call(config,propName)&&!RESERVED_PROPS.hasOwnProperty(propName)&&(void 0===config[propName]&&void 0!==defaultProps?props[propName]=defaultProps[propName]:props[propName]=config[propName]);var childrenLength=arguments.length-2;if(1===childrenLength)props.children=children;else if(childrenLength>1){for(var childArray=Array(childrenLength),i=0;i<childrenLength;i++)childArray[i]=arguments[i+2];props.children=childArray}return ReactElement(element.type,key,ref,self,source,owner,props)}function isValidElement(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE}var REACT_MODULE_REFERENCE,didWarnAboutMaps=!1,userProvidedKeyEscapeRegex=/\/+/g;function escapeUserProvidedKey(text){return text.replace(userProvidedKeyEscapeRegex,"$&/")}function getElementKey(element,index){return"object"==typeof element&&null!==element&&null!=element.key?(checkKeyStringCoercion(element.key),key=""+element.key,escaperLookup={"=":"=0",":":"=2"},"$"+key.replace(/[=:]/g,(function(match){return escaperLookup[match]}))):index.toString(36);var key,escaperLookup}function mapIntoArray(children,array,escapedPrefix,nameSoFar,callback){var type=typeof children;"undefined"!==type&&"boolean"!==type||(children=null);var oldElement,newKey,child,invokeCallback=!1;if(null===children)invokeCallback=!0;else switch(type){case"string":case"number":invokeCallback=!0;break;case"object":switch(children.$$typeof){case REACT_ELEMENT_TYPE:case REACT_PORTAL_TYPE:invokeCallback=!0}}if(invokeCallback){var _child=children,mappedChild=callback(_child),childKey=""===nameSoFar?"."+getElementKey(_child,0):nameSoFar;if(isArray(mappedChild)){var escapedChildKey="";null!=childKey&&(escapedChildKey=escapeUserProvidedKey(childKey)+"/"),mapIntoArray(mappedChild,array,escapedChildKey,"",(function(c){return c}))}else null!=mappedChild&&(isValidElement(mappedChild)&&(!mappedChild.key||_child&&_child.key===mappedChild.key||checkKeyStringCoercion(mappedChild.key),oldElement=mappedChild,newKey=escapedPrefix+(!mappedChild.key||_child&&_child.key===mappedChild.key?"":escapeUserProvidedKey(""+mappedChild.key)+"/")+childKey,mappedChild=ReactElement(oldElement.type,newKey,oldElement.ref,oldElement._self,oldElement._source,oldElement._owner,oldElement.props)),array.push(mappedChild));return 1}var subtreeCount=0,nextNamePrefix=""===nameSoFar?".":nameSoFar+":";if(isArray(children))for(var i=0;i<children.length;i++)subtreeCount+=mapIntoArray(child=children[i],array,escapedPrefix,nextNamePrefix+getElementKey(child,i),callback);else{var iteratorFn=getIteratorFn(children);if("function"==typeof iteratorFn){var iterableChildren=children;iteratorFn===iterableChildren.entries&&(didWarnAboutMaps||warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."),didWarnAboutMaps=!0);for(var step,iterator=iteratorFn.call(iterableChildren),ii=0;!(step=iterator.next()).done;)subtreeCount+=mapIntoArray(child=step.value,array,escapedPrefix,nextNamePrefix+getElementKey(child,ii++),callback)}else if("object"===type){var childrenString=String(children);throw new Error("Objects are not valid as a React child (found: "+("[object Object]"===childrenString?"object with keys {"+Object.keys(children).join(", ")+"}":childrenString)+"). If you meant to render a collection of children, use an array instead.")}}return subtreeCount}function mapChildren(children,func,context){if(null==children)return children;var result=[],count=0;return mapIntoArray(children,result,"","",(function(child){return func.call(context,child,count++)})),result}function lazyInitializer(payload){if(-1===payload._status){var thenable=(0,payload._result)();if(thenable.then((function(moduleObject2){if(0===payload._status||-1===payload._status){var resolved=payload;resolved._status=1,resolved._result=moduleObject2}}),(function(error2){if(0===payload._status||-1===payload._status){var rejected=payload;rejected._status=2,rejected._result=error2}})),-1===payload._status){var pending=payload;pending._status=0,pending._result=thenable}}if(1===payload._status){var moduleObject=payload._result;return void 0===moduleObject&&error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?",moduleObject),"default"in moduleObject||error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))",moduleObject),moduleObject.default}throw payload._result}function isValidElementType(type){return"string"==typeof type||"function"==typeof type||type===REACT_FRAGMENT_TYPE||type===REACT_PROFILER_TYPE||type===REACT_STRICT_MODE_TYPE||type===REACT_SUSPENSE_TYPE||type===REACT_SUSPENSE_LIST_TYPE||type===REACT_OFFSCREEN_TYPE||"object"==typeof type&&null!==type&&(type.$$typeof===REACT_LAZY_TYPE||type.$$typeof===REACT_MEMO_TYPE||type.$$typeof===REACT_PROVIDER_TYPE||type.$$typeof===REACT_CONTEXT_TYPE||type.$$typeof===REACT_FORWARD_REF_TYPE||type.$$typeof===REACT_MODULE_REFERENCE||void 0!==type.getModuleId)}function resolveDispatcher(){var dispatcher=ReactCurrentDispatcher.current;return null===dispatcher&&error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem."),dispatcher}REACT_MODULE_REFERENCE=Symbol.for("react.module.reference");var prevLog,prevInfo,prevWarn,prevError,prevGroup,prevGroupCollapsed,prevGroupEnd,disabledDepth=0;function disabledLog(){}disabledLog.__reactDisabledLog=!0;var prefix,ReactCurrentDispatcher$1=ReactSharedInternals.ReactCurrentDispatcher;function describeBuiltInComponentFrame(name,source,ownerFn){if(void 0===prefix)try{throw Error()}catch(x){var match=x.stack.trim().match(/\n( *(at )?)/);prefix=match&&match[1]||""}return"\n"+prefix+name}var componentFrameCache,reentry=!1,PossiblyWeakMap="function"==typeof WeakMap?WeakMap:Map;function describeNativeComponentFrame(fn,construct){if(!fn||reentry)return"";var control,frame=componentFrameCache.get(fn);if(void 0!==frame)return frame;reentry=!0;var previousDispatcher,previousPrepareStackTrace=Error.prepareStackTrace;Error.prepareStackTrace=void 0,previousDispatcher=ReactCurrentDispatcher$1.current,ReactCurrentDispatcher$1.current=null,function(){if(0===disabledDepth){prevLog=console.log,prevInfo=console.info,prevWarn=console.warn,prevError=console.error,prevGroup=console.group,prevGroupCollapsed=console.groupCollapsed,prevGroupEnd=console.groupEnd;var props={configurable:!0,enumerable:!0,value:disabledLog,writable:!0};Object.defineProperties(console,{info:props,log:props,warn:props,error:props,group:props,groupCollapsed:props,groupEnd:props})}disabledDepth++}();try{if(construct){var Fake=function(){throw Error()};if(Object.defineProperty(Fake.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(Fake,[])}catch(x){control=x}Reflect.construct(fn,[],Fake)}else{try{Fake.call()}catch(x){control=x}fn.call(Fake.prototype)}}else{try{throw Error()}catch(x){control=x}fn()}}catch(sample){if(sample&&control&&"string"==typeof sample.stack){for(var sampleLines=sample.stack.split("\n"),controlLines=control.stack.split("\n"),s=sampleLines.length-1,c=controlLines.length-1;s>=1&&c>=0&&sampleLines[s]!==controlLines[c];)c--;for(;s>=1&&c>=0;s--,c--)if(sampleLines[s]!==controlLines[c]){if(1!==s||1!==c)do{if(s--,--c<0||sampleLines[s]!==controlLines[c]){var _frame="\n"+sampleLines[s].replace(" at new "," at ");return fn.displayName&&_frame.includes("<anonymous>")&&(_frame=_frame.replace("<anonymous>",fn.displayName)),"function"==typeof fn&&componentFrameCache.set(fn,_frame),_frame}}while(s>=1&&c>=0);break}}}finally{reentry=!1,ReactCurrentDispatcher$1.current=previousDispatcher,function(){if(0==--disabledDepth){var props={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:assign({},props,{value:prevLog}),info:assign({},props,{value:prevInfo}),warn:assign({},props,{value:prevWarn}),error:assign({},props,{value:prevError}),group:assign({},props,{value:prevGroup}),groupCollapsed:assign({},props,{value:prevGroupCollapsed}),groupEnd:assign({},props,{value:prevGroupEnd})})}disabledDepth<0&&error("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}(),Error.prepareStackTrace=previousPrepareStackTrace}var name=fn?fn.displayName||fn.name:"",syntheticFrame=name?describeBuiltInComponentFrame(name):"";return"function"==typeof fn&&componentFrameCache.set(fn,syntheticFrame),syntheticFrame}function describeUnknownElementTypeFrameInDEV(type,source,ownerFn){if(null==type)return"";if("function"==typeof type)return describeNativeComponentFrame(type,!(!(prototype=type.prototype)||!prototype.isReactComponent));var prototype;if("string"==typeof type)return describeBuiltInComponentFrame(type);switch(type){case REACT_SUSPENSE_TYPE:return describeBuiltInComponentFrame("Suspense");case REACT_SUSPENSE_LIST_TYPE:return describeBuiltInComponentFrame("SuspenseList")}if("object"==typeof type)switch(type.$$typeof){case REACT_FORWARD_REF_TYPE:return describeNativeComponentFrame(type.render,!1);case REACT_MEMO_TYPE:return describeUnknownElementTypeFrameInDEV(type.type,source,ownerFn);case REACT_LAZY_TYPE:var lazyComponent=type,payload=lazyComponent._payload,init=lazyComponent._init;try{return describeUnknownElementTypeFrameInDEV(init(payload),source,ownerFn)}catch(x){}}return""}componentFrameCache=new PossiblyWeakMap;var propTypesMisspellWarningShown,loggedTypeFailures={},ReactDebugCurrentFrame$1=ReactSharedInternals.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(element){if(element){var owner=element._owner,stack=describeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null);ReactDebugCurrentFrame$1.setExtraStackFrame(stack)}else ReactDebugCurrentFrame$1.setExtraStackFrame(null)}function setCurrentlyValidatingElement$1(element){if(element){var owner=element._owner;setExtraStackFrame(describeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null))}else setExtraStackFrame(null)}function getDeclarationErrorAddendum(){if(ReactCurrentOwner.current){var name=getComponentNameFromType(ReactCurrentOwner.current.type);if(name)return"\n\nCheck the render method of `"+name+"`."}return""}propTypesMisspellWarningShown=!1;var ownerHasKeyUseWarning={};function validateExplicitKey(element,parentType){if(element._store&&!element._store.validated&&null==element.key){element._store.validated=!0;var currentComponentErrorInfo=function(parentType){var info=getDeclarationErrorAddendum();if(!info){var parentName="string"==typeof parentType?parentType:parentType.displayName||parentType.name;parentName&&(info="\n\nCheck the top-level render call using <"+parentName+">.")}return info}(parentType);if(!ownerHasKeyUseWarning[currentComponentErrorInfo]){ownerHasKeyUseWarning[currentComponentErrorInfo]=!0;var childOwner="";element&&element._owner&&element._owner!==ReactCurrentOwner.current&&(childOwner=" It was passed a child from "+getComponentNameFromType(element._owner.type)+"."),setCurrentlyValidatingElement$1(element),error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',currentComponentErrorInfo,childOwner),setCurrentlyValidatingElement$1(null)}}}function validateChildKeys(node,parentType){if("object"==typeof node)if(isArray(node))for(var i=0;i<node.length;i++){var child=node[i];isValidElement(child)&&validateExplicitKey(child,parentType)}else if(isValidElement(node))node._store&&(node._store.validated=!0);else if(node){var iteratorFn=getIteratorFn(node);if("function"==typeof iteratorFn&&iteratorFn!==node.entries)for(var step,iterator=iteratorFn.call(node);!(step=iterator.next()).done;)isValidElement(step.value)&&validateExplicitKey(step.value,parentType)}}function validatePropTypes(element){var propTypes,type=element.type;if(null!=type&&"string"!=typeof type){if("function"==typeof type)propTypes=type.propTypes;else{if("object"!=typeof type||type.$$typeof!==REACT_FORWARD_REF_TYPE&&type.$$typeof!==REACT_MEMO_TYPE)return;propTypes=type.propTypes}if(propTypes){var name=getComponentNameFromType(type);!function(typeSpecs,values,location,componentName,element){var has=Function.call.bind(hasOwnProperty);for(var typeSpecName in typeSpecs)if(has(typeSpecs,typeSpecName)){var error$1=void 0;try{if("function"!=typeof typeSpecs[typeSpecName]){var err=Error((componentName||"React class")+": "+location+" type `"+typeSpecName+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof typeSpecs[typeSpecName]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw err.name="Invariant Violation",err}error$1=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(ex){error$1=ex}!error$1||error$1 instanceof Error||(setCurrentlyValidatingElement(element),error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",componentName||"React class",location,typeSpecName,typeof error$1),setCurrentlyValidatingElement(null)),error$1 instanceof Error&&!(error$1.message in loggedTypeFailures)&&(loggedTypeFailures[error$1.message]=!0,setCurrentlyValidatingElement(element),error("Failed %s type: %s",location,error$1.message),setCurrentlyValidatingElement(null))}}(propTypes,element.props,"prop",name,element)}else void 0===type.PropTypes||propTypesMisspellWarningShown||(propTypesMisspellWarningShown=!0,error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",getComponentNameFromType(type)||"Unknown"));"function"!=typeof type.getDefaultProps||type.getDefaultProps.isReactClassApproved||error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function createElementWithValidation(type,props,children){var elementProps,source,validType=isValidElementType(type);if(!validType){var info="";(void 0===type||"object"==typeof type&&null!==type&&0===Object.keys(type).length)&&(info+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var typeString,sourceInfo=null!=(elementProps=props)&&void 0!==(source=elementProps.__source)?"\n\nCheck your code at "+source.fileName.replace(/^.*[\\\/]/,"")+":"+source.lineNumber+".":"";info+=sourceInfo||getDeclarationErrorAddendum(),null===type?typeString="null":isArray(type)?typeString="array":void 0!==type&&type.$$typeof===REACT_ELEMENT_TYPE?(typeString="<"+(getComponentNameFromType(type.type)||"Unknown")+" />",info=" Did you accidentally export a JSX literal instead of a component?"):typeString=typeof type,error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",typeString,info)}var element=createElement.apply(this,arguments);if(null==element)return element;if(validType)for(var i=2;i<arguments.length;i++)validateChildKeys(arguments[i],type);return type===REACT_FRAGMENT_TYPE?function(fragment){for(var keys=Object.keys(fragment.props),i=0;i<keys.length;i++){var key=keys[i];if("children"!==key&&"key"!==key){setCurrentlyValidatingElement$1(fragment),error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",key),setCurrentlyValidatingElement$1(null);break}}null!==fragment.ref&&(setCurrentlyValidatingElement$1(fragment),error("Invalid attribute `ref` supplied to `React.Fragment`."),setCurrentlyValidatingElement$1(null))}(element):validatePropTypes(element),element}var didWarnAboutDeprecatedCreateFactory=!1,didWarnAboutMessageChannel=!1,enqueueTaskImpl=null,actScopeDepth=0,didWarnNoAwaitAct=!1;function popActScope(prevActScopeDepth){prevActScopeDepth!==actScopeDepth-1&&error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "),actScopeDepth=prevActScopeDepth}function recursivelyFlushAsyncActWork(returnValue,resolve,reject){var queue=ReactCurrentActQueue.current;if(null!==queue)try{flushActQueue(queue),function(task){if(null===enqueueTaskImpl)try{var requireString=("require"+Math.random()).slice(0,7),nodeRequire=module&&module[requireString];enqueueTaskImpl=nodeRequire.call(module,"timers").setImmediate}catch(_err){enqueueTaskImpl=function(callback){!1===didWarnAboutMessageChannel&&(didWarnAboutMessageChannel=!0,"undefined"==typeof MessageChannel&&error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));var channel=new MessageChannel;channel.port1.onmessage=callback,channel.port2.postMessage(void 0)}}enqueueTaskImpl(task)}((function(){0===queue.length?(ReactCurrentActQueue.current=null,resolve(returnValue)):recursivelyFlushAsyncActWork(returnValue,resolve,reject)}))}catch(error2){reject(error2)}else resolve(returnValue)}var isFlushing=!1;function flushActQueue(queue){if(!isFlushing){isFlushing=!0;var i=0;try{for(;i<queue.length;i++){var callback=queue[i];do{callback=callback(!0)}while(null!==callback)}queue.length=0}catch(error2){throw queue=queue.slice(i+1),error2}finally{isFlushing=!1}}}var createElement$1=createElementWithValidation,cloneElement$1=function(element,props,children){for(var newElement=cloneElement.apply(this,arguments),i=2;i<arguments.length;i++)validateChildKeys(arguments[i],newElement.type);return validatePropTypes(newElement),newElement},createFactory=function(type){var validatedFactory=createElementWithValidation.bind(null,type);return validatedFactory.type=type,didWarnAboutDeprecatedCreateFactory||(didWarnAboutDeprecatedCreateFactory=!0,warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")),Object.defineProperty(validatedFactory,"type",{enumerable:!1,get:function(){return warn("Factory.type is deprecated. Access the class directly before passing it to createFactory."),Object.defineProperty(this,"type",{value:type}),type}}),validatedFactory},Children={map:mapChildren,forEach:function(children,forEachFunc,forEachContext){mapChildren(children,(function(){forEachFunc.apply(this,arguments)}),forEachContext)},count:function(children){var n=0;return mapChildren(children,(function(){n++})),n},toArray:function(children){return mapChildren(children,(function(child){return child}))||[]},only:function(children){if(!isValidElement(children))throw new Error("React.Children.only expected to receive a single React element child.");return children}};exports.Children=Children,exports.Component=Component,exports.Fragment=REACT_FRAGMENT_TYPE,exports.Profiler=REACT_PROFILER_TYPE,exports.PureComponent=PureComponent,exports.StrictMode=REACT_STRICT_MODE_TYPE,exports.Suspense=REACT_SUSPENSE_TYPE,exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ReactSharedInternals,exports.cloneElement=cloneElement$1,exports.createContext=function(defaultValue){var context={$$typeof:REACT_CONTEXT_TYPE,_currentValue:defaultValue,_currentValue2:defaultValue,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};context.Provider={$$typeof:REACT_PROVIDER_TYPE,_context:context};var hasWarnedAboutUsingNestedContextConsumers=!1,hasWarnedAboutUsingConsumerProvider=!1,hasWarnedAboutDisplayNameOnConsumer=!1,Consumer={$$typeof:REACT_CONTEXT_TYPE,_context:context};return Object.defineProperties(Consumer,{Provider:{get:function(){return hasWarnedAboutUsingConsumerProvider||(hasWarnedAboutUsingConsumerProvider=!0,error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")),context.Provider},set:function(_Provider){context.Provider=_Provider}},_currentValue:{get:function(){return context._currentValue},set:function(_currentValue){context._currentValue=_currentValue}},_currentValue2:{get:function(){return context._currentValue2},set:function(_currentValue2){context._currentValue2=_currentValue2}},_threadCount:{get:function(){return context._threadCount},set:function(_threadCount){context._threadCount=_threadCount}},Consumer:{get:function(){return hasWarnedAboutUsingNestedContextConsumers||(hasWarnedAboutUsingNestedContextConsumers=!0,error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")),context.Consumer}},displayName:{get:function(){return context.displayName},set:function(displayName){hasWarnedAboutDisplayNameOnConsumer||(warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",displayName),hasWarnedAboutDisplayNameOnConsumer=!0)}}}),context.Consumer=Consumer,context._currentRenderer=null,context._currentRenderer2=null,context},exports.createElement=createElement$1,exports.createFactory=createFactory,exports.createRef=function(){var refObject={current:null};return Object.seal(refObject),refObject},exports.forwardRef=function(render){null!=render&&render.$$typeof===REACT_MEMO_TYPE?error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."):"function"!=typeof render?error("forwardRef requires a render function but was given %s.",null===render?"null":typeof render):0!==render.length&&2!==render.length&&error("forwardRef render functions accept exactly two parameters: props and ref. %s",1===render.length?"Did you forget to use the ref parameter?":"Any additional parameter will be undefined."),null!=render&&(null==render.defaultProps&&null==render.propTypes||error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?"));var ownName,elementType={$$typeof:REACT_FORWARD_REF_TYPE,render:render};return Object.defineProperty(elementType,"displayName",{enumerable:!1,configurable:!0,get:function(){return ownName},set:function(name){ownName=name,render.name||render.displayName||(render.displayName=name)}}),elementType},exports.isValidElement=isValidElement,exports.lazy=function(ctor){var defaultProps,propTypes,lazyType={$$typeof:REACT_LAZY_TYPE,_payload:{_status:-1,_result:ctor},_init:lazyInitializer};return Object.defineProperties(lazyType,{defaultProps:{configurable:!0,get:function(){return defaultProps},set:function(newDefaultProps){error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),defaultProps=newDefaultProps,Object.defineProperty(lazyType,"defaultProps",{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return propTypes},set:function(newPropTypes){error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),propTypes=newPropTypes,Object.defineProperty(lazyType,"propTypes",{enumerable:!0})}}}),lazyType},exports.memo=function(type,compare){isValidElementType(type)||error("memo: The first argument must be a component. Instead received: %s",null===type?"null":typeof type);var ownName,elementType={$$typeof:REACT_MEMO_TYPE,type:type,compare:void 0===compare?null:compare};return Object.defineProperty(elementType,"displayName",{enumerable:!1,configurable:!0,get:function(){return ownName},set:function(name){ownName=name,type.name||type.displayName||(type.displayName=name)}}),elementType},exports.startTransition=function(scope,options){var prevTransition=ReactCurrentBatchConfig.transition;ReactCurrentBatchConfig.transition={};var currentTransition=ReactCurrentBatchConfig.transition;ReactCurrentBatchConfig.transition._updatedFibers=new Set;try{scope()}finally{ReactCurrentBatchConfig.transition=prevTransition,null===prevTransition&&currentTransition._updatedFibers&&(currentTransition._updatedFibers.size>10&&warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."),currentTransition._updatedFibers.clear())}},exports.unstable_act=function(callback){var prevActScopeDepth=actScopeDepth;actScopeDepth++,null===ReactCurrentActQueue.current&&(ReactCurrentActQueue.current=[]);var result,prevIsBatchingLegacy=ReactCurrentActQueue.isBatchingLegacy;try{if(ReactCurrentActQueue.isBatchingLegacy=!0,result=callback(),!prevIsBatchingLegacy&&ReactCurrentActQueue.didScheduleLegacyUpdate){var queue=ReactCurrentActQueue.current;null!==queue&&(ReactCurrentActQueue.didScheduleLegacyUpdate=!1,flushActQueue(queue))}}catch(error2){throw popActScope(prevActScopeDepth),error2}finally{ReactCurrentActQueue.isBatchingLegacy=prevIsBatchingLegacy}if(null!==result&&"object"==typeof result&&"function"==typeof result.then){var thenableResult=result,wasAwaited=!1,thenable={then:function(resolve,reject){wasAwaited=!0,thenableResult.then((function(returnValue2){popActScope(prevActScopeDepth),0===actScopeDepth?recursivelyFlushAsyncActWork(returnValue2,resolve,reject):resolve(returnValue2)}),(function(error2){popActScope(prevActScopeDepth),reject(error2)}))}};return didWarnNoAwaitAct||"undefined"==typeof Promise||Promise.resolve().then((function(){})).then((function(){wasAwaited||(didWarnNoAwaitAct=!0,error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"))})),thenable}var returnValue=result;if(popActScope(prevActScopeDepth),0===actScopeDepth){var _queue=ReactCurrentActQueue.current;return null!==_queue&&(flushActQueue(_queue),ReactCurrentActQueue.current=null),{then:function(resolve,reject){null===ReactCurrentActQueue.current?(ReactCurrentActQueue.current=[],recursivelyFlushAsyncActWork(returnValue,resolve,reject)):resolve(returnValue)}}}return{then:function(resolve,reject){resolve(returnValue)}}},exports.useCallback=function(callback,deps){return resolveDispatcher().useCallback(callback,deps)},exports.useContext=function(Context){var dispatcher=resolveDispatcher();if(void 0!==Context._context){var realContext=Context._context;realContext.Consumer===Context?error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?"):realContext.Provider===Context&&error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?")}return dispatcher.useContext(Context)},exports.useDebugValue=function(value,formatterFn){return resolveDispatcher().useDebugValue(value,formatterFn)},exports.useDeferredValue=function(value){return resolveDispatcher().useDeferredValue(value)},exports.useEffect=function(create,deps){return resolveDispatcher().useEffect(create,deps)},exports.useId=function(){return resolveDispatcher().useId()},exports.useImperativeHandle=function(ref,create,deps){return resolveDispatcher().useImperativeHandle(ref,create,deps)},exports.useInsertionEffect=function(create,deps){return resolveDispatcher().useInsertionEffect(create,deps)},exports.useLayoutEffect=function(create,deps){return resolveDispatcher().useLayoutEffect(create,deps)},exports.useMemo=function(create,deps){return resolveDispatcher().useMemo(create,deps)},exports.useReducer=function(reducer,initialArg,init){return resolveDispatcher().useReducer(reducer,initialArg,init)},exports.useRef=function(initialValue){return resolveDispatcher().useRef(initialValue)},exports.useState=function(initialState){return resolveDispatcher().useState(initialState)},exports.useSyncExternalStore=function(subscribe,getSnapshot,getServerSnapshot){return resolveDispatcher().useSyncExternalStore(subscribe,getSnapshot,getServerSnapshot)},exports.useTransition=function(){return resolveDispatcher().useTransition()},exports.version="18.2.0","undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error)}()),react_development.exports;var module,exports}react_development.exports,"production"===process.env.NODE_ENV?react.exports=requireReact_production_min():react.exports=requireReact_development();var reactExports=react.exports;const React=getDefaultExportFromCjs(reactExports);var isCheckBoxInput=element=>"checkbox"===element.type,isDateObject=value=>value instanceof Date,isNullOrUndefined=value=>null==value;const isObjectType=value=>"object"==typeof value;var isObject=value=>!isNullOrUndefined(value)&&!Array.isArray(value)&&isObjectType(value)&&!isDateObject(value),getEventValue=event=>isObject(event)&&event.target?isCheckBoxInput(event.target)?event.target.checked:event.target.value:event,getNodeParentName=name=>name.substring(0,name.search(/\.\d+(\.|$)/))||name,isNameInFieldArray=(names,name)=>names.has(getNodeParentName(name)),isPlainObject=tempObject=>{const prototypeCopy=tempObject.constructor&&tempObject.constructor.prototype;return isObject(prototypeCopy)&&prototypeCopy.hasOwnProperty("isPrototypeOf")},isWeb="undefined"!=typeof window&&void 0!==window.HTMLElement&&"undefined"!=typeof document;function cloneObject(data){let copy;const isArray=Array.isArray(data);if(data instanceof Date)copy=new Date(data);else if(data instanceof Set)copy=new Set(data);else{if(isWeb&&(data instanceof Blob||data instanceof FileList)||!isArray&&!isObject(data))return data;if(copy=isArray?[]:{},isArray||isPlainObject(data))for(const key in data)data.hasOwnProperty(key)&&(copy[key]=cloneObject(data[key]));else copy=data}return copy}var compact=value=>Array.isArray(value)?value.filter(Boolean):[],isUndefined=val=>void 0===val,get=(object,path,defaultValue)=>{if(!path||!isObject(object))return defaultValue;const result=compact(path.split(/[,[\].]+?/)).reduce(((result2,key)=>isNullOrUndefined(result2)?result2:result2[key]),object);return isUndefined(result)||result===object?isUndefined(object[path])?defaultValue:object[path]:result},isBoolean=value=>"boolean"==typeof value,isKey=value=>/^\w*$/.test(value),stringToPath=input=>compact(input.replace(/["|']|\]/g,"").split(/\.|\[/)),set=(object,path,value)=>{let index=-1;const tempPath=isKey(path)?[path]:stringToPath(path),length=tempPath.length,lastIndex=length-1;for(;++index<length;){const key=tempPath[index];let newValue=value;if(index!==lastIndex){const objValue=object[key];newValue=isObject(objValue)||Array.isArray(objValue)?objValue:isNaN(+tempPath[index+1])?{}:[]}if("__proto__"===key)return;object[key]=newValue,object=object[key]}return object};const EVENTS={BLUR:"blur",FOCUS_OUT:"focusout"},VALIDATION_MODE={onBlur:"onBlur",onChange:"onChange",onSubmit:"onSubmit",onTouched:"onTouched",all:"all"},INPUT_VALIDATION_RULES={max:"max",min:"min",maxLength:"maxLength",minLength:"minLength",pattern:"pattern",required:"required",validate:"validate"};React.createContext(null);var getProxyFormState=(formState,control,localProxyFormState,isRoot=!0)=>{const result={defaultValues:control._defaultValues};for(const key in formState)Object.defineProperty(result,key,{get:()=>{const _key=key;return control._proxyFormState[_key]!==VALIDATION_MODE.all&&(control._proxyFormState[_key]=!isRoot||VALIDATION_MODE.all),formState[_key]}});return result},isEmptyObject=value=>isObject(value)&&!Object.keys(value).length,shouldRenderFormState=(formStateData,_proxyFormState,updateFormState,isRoot)=>{updateFormState(formStateData);const{name:name,...formState}=formStateData;return isEmptyObject(formState)||Object.keys(formState).length>=Object.keys(_proxyFormState).length||Object.keys(formState).find((key=>_proxyFormState[key]===VALIDATION_MODE.all))},convertToArrayPayload=value=>Array.isArray(value)?value:[value];function useSubscribe(props){const _props=React.useRef(props);_props.current=props,React.useEffect((()=>{const subscription=!props.disabled&&_props.current.subject&&_props.current.subject.subscribe({next:_props.current.next});return()=>{subscription&&subscription.unsubscribe()}}),[props.disabled])}var isString=value=>"string"==typeof value,generateWatchOutput=(names,_names,formValues,isGlobal,defaultValue)=>isString(names)?(isGlobal&&_names.watch.add(names),get(formValues,names,defaultValue)):Array.isArray(names)?names.map((fieldName=>(isGlobal&&_names.watch.add(fieldName),get(formValues,fieldName)))):(isGlobal&&(_names.watchAll=!0),formValues),appendErrors=(name,validateAllFieldCriteria,errors,type,message)=>validateAllFieldCriteria?{...errors[name],types:{...errors[name]&&errors[name].types?errors[name].types:{},[type]:message||!0}}:{},getValidationModes=mode=>({isOnSubmit:!mode||mode===VALIDATION_MODE.onSubmit,isOnBlur:mode===VALIDATION_MODE.onBlur,isOnChange:mode===VALIDATION_MODE.onChange,isOnAll:mode===VALIDATION_MODE.all,isOnTouch:mode===VALIDATION_MODE.onTouched}),isWatched=(name,_names,isBlurEvent)=>!isBlurEvent&&(_names.watchAll||_names.watch.has(name)||[..._names.watch].some((watchName=>name.startsWith(watchName)&&/^\.\w+/.test(name.slice(watchName.length)))));const iterateFieldsByAction=(fields,action,fieldsNames,abortEarly)=>{for(const key of fieldsNames||Object.keys(fields)){const field=get(fields,key);if(field){const{_f:_f,...currentField}=field;if(_f){if(_f.refs&&_f.refs[0]&&action(_f.refs[0],key)&&!abortEarly)return!0;if(_f.ref&&action(_f.ref,_f.name)&&!abortEarly)return!0;if(iterateFieldsByAction(currentField,action))break}else if(isObject(currentField)&&iterateFieldsByAction(currentField,action))break}}};var updateFieldArrayRootError=(errors,error,name)=>{const fieldArrayErrors=convertToArrayPayload(get(errors,name));return set(fieldArrayErrors,"root",error[name]),set(errors,name,fieldArrayErrors),errors},isFileInput=element=>"file"===element.type,isFunction=value=>"function"==typeof value,isHTMLElement=value=>{if(!isWeb)return!1;const owner=value?value.ownerDocument:0;return value instanceof(owner&&owner.defaultView?owner.defaultView.HTMLElement:HTMLElement)},isMessage=value=>isString(value),isRadioInput=element=>"radio"===element.type,isRegex=value=>value instanceof RegExp;const defaultResult={value:!1,isValid:!1},validResult={value:!0,isValid:!0};var getCheckboxValue=options=>{if(Array.isArray(options)){if(options.length>1){const values=options.filter((option=>option&&option.checked&&!option.disabled)).map((option=>option.value));return{value:values,isValid:!!values.length}}return options[0].checked&&!options[0].disabled?options[0].attributes&&!isUndefined(options[0].attributes.value)?isUndefined(options[0].value)||""===options[0].value?validResult:{value:options[0].value,isValid:!0}:validResult:defaultResult}return defaultResult};const defaultReturn={isValid:!1,value:null};var getRadioValue=options=>Array.isArray(options)?options.reduce(((previous,option)=>option&&option.checked&&!option.disabled?{isValid:!0,value:option.value}:previous),defaultReturn):defaultReturn;function getValidateError(result,ref,type="validate"){if(isMessage(result)||Array.isArray(result)&&result.every(isMessage)||isBoolean(result)&&!result)return{type:type,message:isMessage(result)?result:"",ref:ref}}var getValueAndMessage=validationData=>isObject(validationData)&&!isRegex(validationData)?validationData:{value:validationData,message:""},validateField=async(field,formValues,validateAllFieldCriteria,shouldUseNativeValidation,isFieldArray)=>{const{ref:ref,refs:refs,required:required,maxLength:maxLength,minLength:minLength,min:min,max:max,pattern:pattern,validate:validate,name:name,valueAsNumber:valueAsNumber,mount:mount,disabled:disabled}=field._f,inputValue=get(formValues,name);if(!mount||disabled)return{};const inputRef=refs?refs[0]:ref,setCustomValidity=message=>{shouldUseNativeValidation&&inputRef.reportValidity&&(inputRef.setCustomValidity(isBoolean(message)?"":message||""),inputRef.reportValidity())},error={},isRadio=isRadioInput(ref),isCheckBox=isCheckBoxInput(ref),isRadioOrCheckbox2=isRadio||isCheckBox,isEmpty=(valueAsNumber||isFileInput(ref))&&isUndefined(ref.value)&&isUndefined(inputValue)||isHTMLElement(ref)&&""===ref.value||""===inputValue||Array.isArray(inputValue)&&!inputValue.length,appendErrorsCurry=appendErrors.bind(null,name,validateAllFieldCriteria,error),getMinMaxMessage=(exceedMax,maxLengthMessage,minLengthMessage,maxType=INPUT_VALIDATION_RULES.maxLength,minType=INPUT_VALIDATION_RULES.minLength)=>{const message=exceedMax?maxLengthMessage:minLengthMessage;error[name]={type:exceedMax?maxType:minType,message:message,ref:ref,...appendErrorsCurry(exceedMax?maxType:minType,message)}};if(isFieldArray?!Array.isArray(inputValue)||!inputValue.length:required&&(!isRadioOrCheckbox2&&(isEmpty||isNullOrUndefined(inputValue))||isBoolean(inputValue)&&!inputValue||isCheckBox&&!getCheckboxValue(refs).isValid||isRadio&&!getRadioValue(refs).isValid)){const{value:value,message:message}=isMessage(required)?{value:!!required,message:required}:getValueAndMessage(required);if(value&&(error[name]={type:INPUT_VALIDATION_RULES.required,message:message,ref:inputRef,...appendErrorsCurry(INPUT_VALIDATION_RULES.required,message)},!validateAllFieldCriteria))return setCustomValidity(message),error}if(!(isEmpty||isNullOrUndefined(min)&&isNullOrUndefined(max))){let exceedMax,exceedMin;const maxOutput=getValueAndMessage(max),minOutput=getValueAndMessage(min);if(isNullOrUndefined(inputValue)||isNaN(inputValue)){const valueDate=ref.valueAsDate||new Date(inputValue),convertTimeToDate=time=>new Date((new Date).toDateString()+" "+time),isTime="time"==ref.type,isWeek="week"==ref.type;isString(maxOutput.value)&&inputValue&&(exceedMax=isTime?convertTimeToDate(inputValue)>convertTimeToDate(maxOutput.value):isWeek?inputValue>maxOutput.value:valueDate>new Date(maxOutput.value)),isString(minOutput.value)&&inputValue&&(exceedMin=isTime?convertTimeToDate(inputValue)<convertTimeToDate(minOutput.value):isWeek?inputValue<minOutput.value:valueDate<new Date(minOutput.value))}else{const valueNumber=ref.valueAsNumber||(inputValue?+inputValue:inputValue);isNullOrUndefined(maxOutput.value)||(exceedMax=valueNumber>maxOutput.value),isNullOrUndefined(minOutput.value)||(exceedMin=valueNumber<minOutput.value)}if((exceedMax||exceedMin)&&(getMinMaxMessage(!!exceedMax,maxOutput.message,minOutput.message,INPUT_VALIDATION_RULES.max,INPUT_VALIDATION_RULES.min),!validateAllFieldCriteria))return setCustomValidity(error[name].message),error}if((maxLength||minLength)&&!isEmpty&&(isString(inputValue)||isFieldArray&&Array.isArray(inputValue))){const maxLengthOutput=getValueAndMessage(maxLength),minLengthOutput=getValueAndMessage(minLength),exceedMax=!isNullOrUndefined(maxLengthOutput.value)&&inputValue.length>+maxLengthOutput.value,exceedMin=!isNullOrUndefined(minLengthOutput.value)&&inputValue.length<+minLengthOutput.value;if((exceedMax||exceedMin)&&(getMinMaxMessage(exceedMax,maxLengthOutput.message,minLengthOutput.message),!validateAllFieldCriteria))return setCustomValidity(error[name].message),error}if(pattern&&!isEmpty&&isString(inputValue)){const{value:patternValue,message:message}=getValueAndMessage(pattern);if(isRegex(patternValue)&&!inputValue.match(patternValue)&&(error[name]={type:INPUT_VALIDATION_RULES.pattern,message:message,ref:ref,...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern,message)},!validateAllFieldCriteria))return setCustomValidity(message),error}if(validate)if(isFunction(validate)){const validateError=getValidateError(await validate(inputValue,formValues),inputRef);if(validateError&&(error[name]={...validateError,...appendErrorsCurry(INPUT_VALIDATION_RULES.validate,validateError.message)},!validateAllFieldCriteria))return setCustomValidity(validateError.message),error}else if(isObject(validate)){let validationResult={};for(const key in validate){if(!isEmptyObject(validationResult)&&!validateAllFieldCriteria)break;const validateError=getValidateError(await validate[key](inputValue,formValues),inputRef,key);validateError&&(validationResult={...validateError,...appendErrorsCurry(key,validateError.message)},setCustomValidity(validateError.message),validateAllFieldCriteria&&(error[name]=validationResult))}if(!isEmptyObject(validationResult)&&(error[name]={ref:inputRef,...validationResult},!validateAllFieldCriteria))return error}return setCustomValidity(!0),error};function baseGet(object,updatePath){const length=updatePath.slice(0,-1).length;let index=0;for(;index<length;)object=isUndefined(object)?index++:object[updatePath[index++]];return object}function isEmptyArray(obj){for(const key in obj)if(obj.hasOwnProperty(key)&&!isUndefined(obj[key]))return!1;return!0}function unset(object,path){const paths=Array.isArray(path)?path:isKey(path)?[path]:stringToPath(path),childObject=1===paths.length?object:baseGet(object,paths),index=paths.length-1,key=paths[index];return childObject&&delete childObject[key],0!==index&&(isObject(childObject)&&isEmptyObject(childObject)||Array.isArray(childObject)&&isEmptyArray(childObject))&&unset(object,paths.slice(0,-1)),object}var createSubject=()=>{let _observers=[];return{get observers(){return _observers},next:value=>{for(const observer of _observers)observer.next&&observer.next(value)},subscribe:observer=>(_observers.push(observer),{unsubscribe:()=>{_observers=_observers.filter((o=>o!==observer))}}),unsubscribe:()=>{_observers=[]}}},isPrimitive=value=>isNullOrUndefined(value)||!isObjectType(value);function deepEqual(object1,object2){if(isPrimitive(object1)||isPrimitive(object2))return object1===object2;if(isDateObject(object1)&&isDateObject(object2))return object1.getTime()===object2.getTime();const keys1=Object.keys(object1),keys2=Object.keys(object2);if(keys1.length!==keys2.length)return!1;for(const key of keys1){const val1=object1[key];if(!keys2.includes(key))return!1;if("ref"!==key){const val2=object2[key];if(isDateObject(val1)&&isDateObject(val2)||isObject(val1)&&isObject(val2)||Array.isArray(val1)&&Array.isArray(val2)?!deepEqual(val1,val2):val1!==val2)return!1}}return!0}var isMultipleSelect=element=>"select-multiple"===element.type,isRadioOrCheckbox=ref=>isRadioInput(ref)||isCheckBoxInput(ref),live=ref=>isHTMLElement(ref)&&ref.isConnected,objectHasFunction=data=>{for(const key in data)if(isFunction(data[key]))return!0;return!1};function markFieldsDirty(data,fields={}){const isParentNodeArray=Array.isArray(data);if(isObject(data)||isParentNodeArray)for(const key in data)Array.isArray(data[key])||isObject(data[key])&&!objectHasFunction(data[key])?(fields[key]=Array.isArray(data[key])?[]:{},markFieldsDirty(data[key],fields[key])):isNullOrUndefined(data[key])||(fields[key]=!0);return fields}function getDirtyFieldsFromDefaultValues(data,formValues,dirtyFieldsFromValues){const isParentNodeArray=Array.isArray(data);if(isObject(data)||isParentNodeArray)for(const key in data)Array.isArray(data[key])||isObject(data[key])&&!objectHasFunction(data[key])?isUndefined(formValues)||isPrimitive(dirtyFieldsFromValues[key])?dirtyFieldsFromValues[key]=Array.isArray(data[key])?markFieldsDirty(data[key],[]):{...markFieldsDirty(data[key])}:getDirtyFieldsFromDefaultValues(data[key],isNullOrUndefined(formValues)?{}:formValues[key],dirtyFieldsFromValues[key]):dirtyFieldsFromValues[key]=!deepEqual(data[key],formValues[key]);return dirtyFieldsFromValues}var getDirtyFields=(defaultValues,formValues)=>getDirtyFieldsFromDefaultValues(defaultValues,formValues,markFieldsDirty(formValues)),getFieldValueAs=(value,{valueAsNumber:valueAsNumber,valueAsDate:valueAsDate,setValueAs:setValueAs})=>isUndefined(value)?value:valueAsNumber?""===value?NaN:value?+value:value:valueAsDate&&isString(value)?new Date(value):setValueAs?setValueAs(value):value;function getFieldValue(_f){const ref=_f.ref;if(!(_f.refs?_f.refs.every((ref2=>ref2.disabled)):ref.disabled))return isFileInput(ref)?ref.files:isRadioInput(ref)?getRadioValue(_f.refs).value:isMultipleSelect(ref)?[...ref.selectedOptions].map((({value:value})=>value)):isCheckBoxInput(ref)?getCheckboxValue(_f.refs).value:getFieldValueAs(isUndefined(ref.value)?_f.ref.value:ref.value,_f)}var getResolverOptions=(fieldsNames,_fields,criteriaMode,shouldUseNativeValidation)=>{const fields={};for(const name of fieldsNames){const field=get(_fields,name);field&&set(fields,name,field._f)}return{criteriaMode:criteriaMode,names:[...fieldsNames],fields:fields,shouldUseNativeValidation:shouldUseNativeValidation}},getRuleValue=rule=>isUndefined(rule)?rule:isRegex(rule)?rule.source:isObject(rule)?isRegex(rule.value)?rule.value.source:rule.value:rule;const ASYNC_FUNCTION="AsyncFunction";var hasPromiseValidation=fieldReference=>!(fieldReference&&fieldReference.validate||!(isFunction(fieldReference.validate)&&fieldReference.validate.constructor.name===ASYNC_FUNCTION||isObject(fieldReference.validate)&&Object.values(fieldReference.validate).find((validateFunction=>validateFunction.constructor.name===ASYNC_FUNCTION)))),hasValidation=options=>options.mount&&(options.required||options.min||options.max||options.maxLength||options.minLength||options.pattern||options.validate);function schemaErrorLookup(errors,_fields,name){const error=get(errors,name);if(error||isKey(name))return{error:error,name:name};const names=name.split(".");for(;names.length;){const fieldName=names.join("."),field=get(_fields,fieldName),foundError=get(errors,fieldName);if(field&&!Array.isArray(field)&&name!==fieldName)return{name:name};if(foundError&&foundError.type)return{name:fieldName,error:foundError};names.pop()}return{name:name}}var skipValidation=(isBlurEvent,isTouched,isSubmitted,reValidateMode,mode)=>!mode.isOnAll&&(!isSubmitted&&mode.isOnTouch?!(isTouched||isBlurEvent):(isSubmitted?reValidateMode.isOnBlur:mode.isOnBlur)?!isBlurEvent:!(isSubmitted?reValidateMode.isOnChange:mode.isOnChange)||isBlurEvent),unsetEmptyArray=(ref,name)=>!compact(get(ref,name)).length&&unset(ref,name);const defaultOptions={mode:VALIDATION_MODE.onSubmit,reValidateMode:VALIDATION_MODE.onChange,shouldFocusError:!0};function createFormControl(props={}){let delayErrorCallback,_options={...defaultOptions,...props},_formState={submitCount:0,isDirty:!1,isLoading:isFunction(_options.defaultValues),isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,touchedFields:{},dirtyFields:{},validatingFields:{},errors:_options.errors||{},disabled:_options.disabled||!1},_fields={},_defaultValues=(isObject(_options.defaultValues)||isObject(_options.values))&&cloneObject(_options.defaultValues||_options.values)||{},_formValues=_options.shouldUnregister?{}:cloneObject(_defaultValues),_state={action:!1,mount:!1,watch:!1},_names={mount:new Set,unMount:new Set,array:new Set,watch:new Set},timer=0;const _proxyFormState={isDirty:!1,dirtyFields:!1,validatingFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1},_subjects={values:createSubject(),array:createSubject(),state:createSubject()},validationModeBeforeSubmit=getValidationModes(_options.mode),validationModeAfterSubmit=getValidationModes(_options.reValidateMode),shouldDisplayAllAssociatedErrors=_options.criteriaMode===VALIDATION_MODE.all,_updateValid=async shouldUpdateValid=>{if(!_options.disabled&&(_proxyFormState.isValid||shouldUpdateValid)){const isValid=_options.resolver?isEmptyObject((await _executeSchema()).errors):await executeBuiltInValidation(_fields,!0);isValid!==_formState.isValid&&_subjects.state.next({isValid:isValid})}},_updateIsValidating=(names,isValidating)=>{_options.disabled||!_proxyFormState.isValidating&&!_proxyFormState.validatingFields||((names||Array.from(_names.mount)).forEach((name=>{name&&(isValidating?set(_formState.validatingFields,name,isValidating):unset(_formState.validatingFields,name))})),_subjects.state.next({validatingFields:_formState.validatingFields,isValidating:!isEmptyObject(_formState.validatingFields)}))},updateValidAndValue=(name,shouldSkipSetValueAs,value,ref)=>{const field=get(_fields,name);if(field){const defaultValue=get(_formValues,name,isUndefined(value)?get(_defaultValues,name):value);isUndefined(defaultValue)||ref&&ref.defaultChecked||shouldSkipSetValueAs?set(_formValues,name,shouldSkipSetValueAs?defaultValue:getFieldValue(field._f)):setFieldValue(name,defaultValue),_state.mount&&_updateValid()}},updateTouchAndDirty=(name,fieldValue,isBlurEvent,shouldDirty,shouldRender)=>{let shouldUpdateField=!1,isPreviousDirty=!1;const output={name:name};if(!_options.disabled){const disabledField=!!(get(_fields,name)&&get(_fields,name)._f&&get(_fields,name)._f.disabled);if(!isBlurEvent||shouldDirty){_proxyFormState.isDirty&&(isPreviousDirty=_formState.isDirty,_formState.isDirty=output.isDirty=_getDirty(),shouldUpdateField=isPreviousDirty!==output.isDirty);const isCurrentFieldPristine=disabledField||deepEqual(get(_defaultValues,name),fieldValue);isPreviousDirty=!(disabledField||!get(_formState.dirtyFields,name)),isCurrentFieldPristine||disabledField?unset(_formState.dirtyFields,name):set(_formState.dirtyFields,name,!0),output.dirtyFields=_formState.dirtyFields,shouldUpdateField=shouldUpdateField||_proxyFormState.dirtyFields&&isPreviousDirty!==!isCurrentFieldPristine}if(isBlurEvent){const isPreviousFieldTouched=get(_formState.touchedFields,name);isPreviousFieldTouched||(set(_formState.touchedFields,name,isBlurEvent),output.touchedFields=_formState.touchedFields,shouldUpdateField=shouldUpdateField||_proxyFormState.touchedFields&&isPreviousFieldTouched!==isBlurEvent)}shouldUpdateField&&shouldRender&&_subjects.state.next(output)}return shouldUpdateField?output:{}},shouldRenderByError=(name,isValid,error,fieldState)=>{const previousFieldError=get(_formState.errors,name),shouldUpdateValid=_proxyFormState.isValid&&isBoolean(isValid)&&_formState.isValid!==isValid;var callback;if(props.delayError&&error?(callback=()=>((name,error)=>{set(_formState.errors,name,error),_subjects.state.next({errors:_formState.errors})})(name,error),delayErrorCallback=wait=>{clearTimeout(timer),timer=setTimeout(callback,wait)},delayErrorCallback(props.delayError)):(clearTimeout(timer),delayErrorCallback=null,error?set(_formState.errors,name,error):unset(_formState.errors,name)),(error?!deepEqual(previousFieldError,error):previousFieldError)||!isEmptyObject(fieldState)||shouldUpdateValid){const updatedFormState={...fieldState,...shouldUpdateValid&&isBoolean(isValid)?{isValid:isValid}:{},errors:_formState.errors,name:name};_formState={..._formState,...updatedFormState},_subjects.state.next(updatedFormState)}},_executeSchema=async name=>{_updateIsValidating(name,!0);const result=await _options.resolver(_formValues,_options.context,getResolverOptions(name||_names.mount,_fields,_options.criteriaMode,_options.shouldUseNativeValidation));return _updateIsValidating(name),result},executeBuiltInValidation=async(fields,shouldOnlyCheckValid,context={valid:!0})=>{for(const name in fields){const field=fields[name];if(field){const{_f:_f,...fieldValue}=field;if(_f){const isFieldArrayRoot=_names.array.has(_f.name),isPromiseFunction=field._f&&hasPromiseValidation(field._f);isPromiseFunction&&_proxyFormState.validatingFields&&_updateIsValidating([name],!0);const fieldError=await validateField(field,_formValues,shouldDisplayAllAssociatedErrors,_options.shouldUseNativeValidation&&!shouldOnlyCheckValid,isFieldArrayRoot);if(isPromiseFunction&&_proxyFormState.validatingFields&&_updateIsValidating([name]),fieldError[_f.name]&&(context.valid=!1,shouldOnlyCheckValid))break;!shouldOnlyCheckValid&&(get(fieldError,_f.name)?isFieldArrayRoot?updateFieldArrayRootError(_formState.errors,fieldError,_f.name):set(_formState.errors,_f.name,fieldError[_f.name]):unset(_formState.errors,_f.name))}!isEmptyObject(fieldValue)&&await executeBuiltInValidation(fieldValue,shouldOnlyCheckValid,context)}}return context.valid},_getDirty=(name,data)=>!_options.disabled&&(name&&data&&set(_formValues,name,data),!deepEqual(getValues(),_defaultValues)),_getWatch=(names,defaultValue,isGlobal)=>generateWatchOutput(names,_names,{..._state.mount?_formValues:isUndefined(defaultValue)?_defaultValues:isString(names)?{[names]:defaultValue}:defaultValue},isGlobal,defaultValue),setFieldValue=(name,value,options={})=>{const field=get(_fields,name);let fieldValue=value;if(field){const fieldReference=field._f;fieldReference&&(!fieldReference.disabled&&set(_formValues,name,getFieldValueAs(value,fieldReference)),fieldValue=isHTMLElement(fieldReference.ref)&&isNullOrUndefined(value)?"":value,isMultipleSelect(fieldReference.ref)?[...fieldReference.ref.options].forEach((optionRef=>optionRef.selected=fieldValue.includes(optionRef.value))):fieldReference.refs?isCheckBoxInput(fieldReference.ref)?fieldReference.refs.length>1?fieldReference.refs.forEach((checkboxRef=>(!checkboxRef.defaultChecked||!checkboxRef.disabled)&&(checkboxRef.checked=Array.isArray(fieldValue)?!!fieldValue.find((data=>data===checkboxRef.value)):fieldValue===checkboxRef.value))):fieldReference.refs[0]&&(fieldReference.refs[0].checked=!!fieldValue):fieldReference.refs.forEach((radioRef=>radioRef.checked=radioRef.value===fieldValue)):isFileInput(fieldReference.ref)?fieldReference.ref.value="":(fieldReference.ref.value=fieldValue,fieldReference.ref.type||_subjects.values.next({name:name,values:{..._formValues}})))}(options.shouldDirty||options.shouldTouch)&&updateTouchAndDirty(name,fieldValue,options.shouldTouch,options.shouldDirty,!0),options.shouldValidate&&trigger(name)},setValues=(name,value,options)=>{for(const fieldKey in value){const fieldValue=value[fieldKey],fieldName=`${name}.${fieldKey}`,field=get(_fields,fieldName);(_names.array.has(name)||isObject(fieldValue)||field&&!field._f)&&!isDateObject(fieldValue)?setValues(fieldName,fieldValue,options):setFieldValue(fieldName,fieldValue,options)}},setValue=(name,value,options={})=>{const field=get(_fields,name),isFieldArray=_names.array.has(name),cloneValue=cloneObject(value);set(_formValues,name,cloneValue),isFieldArray?(_subjects.array.next({name:name,values:{..._formValues}}),(_proxyFormState.isDirty||_proxyFormState.dirtyFields)&&options.shouldDirty&&_subjects.state.next({name:name,dirtyFields:getDirtyFields(_defaultValues,_formValues),isDirty:_getDirty(name,cloneValue)})):!field||field._f||isNullOrUndefined(cloneValue)?setFieldValue(name,cloneValue,options):setValues(name,cloneValue,options),isWatched(name,_names)&&_subjects.state.next({..._formState}),_subjects.values.next({name:_state.mount?name:void 0,values:{..._formValues}})},onChange=async event=>{_state.mount=!0;const target=event.target;let name=target.name,isFieldValueUpdated=!0;const field=get(_fields,name),_updateIsFieldValueUpdated=fieldValue=>{isFieldValueUpdated=Number.isNaN(fieldValue)||isDateObject(fieldValue)&&isNaN(fieldValue.getTime())||deepEqual(fieldValue,get(_formValues,name,fieldValue))};if(field){let error,isValid;const fieldValue=target.type?getFieldValue(field._f):getEventValue(event),isBlurEvent=event.type===EVENTS.BLUR||event.type===EVENTS.FOCUS_OUT,shouldSkipValidation=!hasValidation(field._f)&&!_options.resolver&&!get(_formState.errors,name)&&!field._f.deps||skipValidation(isBlurEvent,get(_formState.touchedFields,name),_formState.isSubmitted,validationModeAfterSubmit,validationModeBeforeSubmit),watched=isWatched(name,_names,isBlurEvent);set(_formValues,name,fieldValue),isBlurEvent?(field._f.onBlur&&field._f.onBlur(event),delayErrorCallback&&delayErrorCallback(0)):field._f.onChange&&field._f.onChange(event);const fieldState=updateTouchAndDirty(name,fieldValue,isBlurEvent,!1),shouldRender=!isEmptyObject(fieldState)||watched;if(!isBlurEvent&&_subjects.values.next({name:name,type:event.type,values:{..._formValues}}),shouldSkipValidation)return _proxyFormState.isValid&&("onBlur"===props.mode?isBlurEvent&&_updateValid():_updateValid()),shouldRender&&_subjects.state.next({name:name,...watched?{}:fieldState});if(!isBlurEvent&&watched&&_subjects.state.next({..._formState}),_options.resolver){const{errors:errors}=await _executeSchema([name]);if(_updateIsFieldValueUpdated(fieldValue),isFieldValueUpdated){const previousErrorLookupResult=schemaErrorLookup(_formState.errors,_fields,name),errorLookupResult=schemaErrorLookup(errors,_fields,previousErrorLookupResult.name||name);error=errorLookupResult.error,name=errorLookupResult.name,isValid=isEmptyObject(errors)}}else _updateIsValidating([name],!0),error=(await validateField(field,_formValues,shouldDisplayAllAssociatedErrors,_options.shouldUseNativeValidation))[name],_updateIsValidating([name]),_updateIsFieldValueUpdated(fieldValue),isFieldValueUpdated&&(error?isValid=!1:_proxyFormState.isValid&&(isValid=await executeBuiltInValidation(_fields,!0)));isFieldValueUpdated&&(field._f.deps&&trigger(field._f.deps),shouldRenderByError(name,isValid,error,fieldState))}},_focusInput=(ref,key)=>{if(get(_formState.errors,key)&&ref.focus)return ref.focus(),1},trigger=async(name,options={})=>{let isValid,validationResult;const fieldNames=convertToArrayPayload(name);if(_options.resolver){const errors=await(async names=>{const{errors:errors}=await _executeSchema(names);if(names)for(const name of names){const error=get(errors,name);error?set(_formState.errors,name,error):unset(_formState.errors,name)}else _formState.errors=errors;return errors})(isUndefined(name)?name:fieldNames);isValid=isEmptyObject(errors),validationResult=name?!fieldNames.some((name2=>get(errors,name2))):isValid}else name?(validationResult=(await Promise.all(fieldNames.map((async fieldName=>{const field=get(_fields,fieldName);return await executeBuiltInValidation(field&&field._f?{[fieldName]:field}:field)})))).every(Boolean),(validationResult||_formState.isValid)&&_updateValid()):validationResult=isValid=await executeBuiltInValidation(_fields);return _subjects.state.next({...!isString(name)||_proxyFormState.isValid&&isValid!==_formState.isValid?{}:{name:name},..._options.resolver||!name?{isValid:isValid}:{},errors:_formState.errors}),options.shouldFocus&&!validationResult&&iterateFieldsByAction(_fields,_focusInput,name?fieldNames:_names.mount),validationResult},getValues=fieldNames=>{const values={..._state.mount?_formValues:_defaultValues};return isUndefined(fieldNames)?values:isString(fieldNames)?get(values,fieldNames):fieldNames.map((name=>get(values,name)))},getFieldState=(name,formState)=>({invalid:!!get((formState||_formState).errors,name),isDirty:!!get((formState||_formState).dirtyFields,name),error:get((formState||_formState).errors,name),isValidating:!!get(_formState.validatingFields,name),isTouched:!!get((formState||_formState).touchedFields,name)}),setError=(name,error,options)=>{const ref=(get(_fields,name,{_f:{}})._f||{}).ref,currentError=get(_formState.errors,name)||{},{ref:currentRef,message:message,type:type,...restOfErrorTree}=currentError;set(_formState.errors,name,{...restOfErrorTree,...error,ref:ref}),_subjects.state.next({name:name,errors:_formState.errors,isValid:!1}),options&&options.shouldFocus&&ref&&ref.focus&&ref.focus()},unregister=(name,options={})=>{for(const fieldName of name?convertToArrayPayload(name):_names.mount)_names.mount.delete(fieldName),_names.array.delete(fieldName),options.keepValue||(unset(_fields,fieldName),unset(_formValues,fieldName)),!options.keepError&&unset(_formState.errors,fieldName),!options.keepDirty&&unset(_formState.dirtyFields,fieldName),!options.keepTouched&&unset(_formState.touchedFields,fieldName),!options.keepIsValidating&&unset(_formState.validatingFields,fieldName),!_options.shouldUnregister&&!options.keepDefaultValue&&unset(_defaultValues,fieldName);_subjects.values.next({values:{..._formValues}}),_subjects.state.next({..._formState,...options.keepDirty?{isDirty:_getDirty()}:{}}),!options.keepIsValid&&_updateValid()},_updateDisabledField=({disabled:disabled,name:name,field:field,fields:fields,value:value})=>{if(isBoolean(disabled)&&_state.mount||disabled){const inputValue=disabled?void 0:isUndefined(value)?getFieldValue(field?field._f:get(fields,name)._f):value;set(_formValues,name,inputValue),updateTouchAndDirty(name,inputValue,!1,!1,!0)}},register=(name,options={})=>{let field=get(_fields,name);const disabledIsDefined=isBoolean(options.disabled)||isBoolean(_options.disabled);return set(_fields,name,{...field||{},_f:{...field&&field._f?field._f:{ref:{name:name}},name:name,mount:!0,...options}}),_names.mount.add(name),field?_updateDisabledField({field:field,disabled:isBoolean(options.disabled)?options.disabled:_options.disabled,name:name,value:options.value}):updateValidAndValue(name,!0,options.value),{...disabledIsDefined?{disabled:options.disabled||_options.disabled}:{},..._options.progressive?{required:!!options.required,min:getRuleValue(options.min),max:getRuleValue(options.max),minLength:getRuleValue(options.minLength),maxLength:getRuleValue(options.maxLength),pattern:getRuleValue(options.pattern)}:{},name:name,onChange:onChange,onBlur:onChange,ref:ref=>{if(ref){register(name,options),field=get(_fields,name);const fieldRef=isUndefined(ref.value)&&ref.querySelectorAll&&ref.querySelectorAll("input,select,textarea")[0]||ref,radioOrCheckbox=isRadioOrCheckbox(fieldRef),refs=field._f.refs||[];if(radioOrCheckbox?refs.find((option=>option===fieldRef)):fieldRef===field._f.ref)return;set(_fields,name,{_f:{...field._f,...radioOrCheckbox?{refs:[...refs.filter(live),fieldRef,...Array.isArray(get(_defaultValues,name))?[{}]:[]],ref:{type:fieldRef.type,name:name}}:{ref:fieldRef}}}),updateValidAndValue(name,!1,void 0,fieldRef)}else field=get(_fields,name,{}),field._f&&(field._f.mount=!1),(_options.shouldUnregister||options.shouldUnregister)&&(!isNameInFieldArray(_names.array,name)||!_state.action)&&_names.unMount.add(name)}}},_focusError=()=>_options.shouldFocusError&&iterateFieldsByAction(_fields,_focusInput,_names.mount),handleSubmit=(onValid,onInvalid)=>async e=>{let onValidError;if(e&&(e.preventDefault&&e.preventDefault(),e.persist&&e.persist()),_options.disabled)return void(onInvalid&&await onInvalid({..._formState.errors},e));let fieldValues=cloneObject(_formValues);if(_subjects.state.next({isSubmitting:!0}),_options.resolver){const{errors:errors,values:values}=await _executeSchema();_formState.errors=errors,fieldValues=values}else await executeBuiltInValidation(_fields);if(unset(_formState.errors,"root"),isEmptyObject(_formState.errors)){_subjects.state.next({errors:{}});try{await onValid(fieldValues,e)}catch(error){onValidError=error}}else onInvalid&&await onInvalid({..._formState.errors},e),_focusError(),setTimeout(_focusError);if(_subjects.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:isEmptyObject(_formState.errors)&&!onValidError,submitCount:_formState.submitCount+1,errors:_formState.errors}),onValidError)throw onValidError},_reset=(formValues,keepStateOptions={})=>{const updatedValues=formValues?cloneObject(formValues):_defaultValues,cloneUpdatedValues=cloneObject(updatedValues),isEmptyResetValues=isEmptyObject(formValues),values=isEmptyResetValues?_defaultValues:cloneUpdatedValues;if(keepStateOptions.keepDefaultValues||(_defaultValues=updatedValues),!keepStateOptions.keepValues){if(keepStateOptions.keepDirtyValues){const fieldsToCheck=new Set([..._names.mount,...Object.keys(getDirtyFields(_defaultValues,_formValues))]);for(const fieldName of Array.from(fieldsToCheck))get(_formState.dirtyFields,fieldName)?set(values,fieldName,get(_formValues,fieldName)):setValue(fieldName,get(values,fieldName))}else{if(isWeb&&isUndefined(formValues))for(const name of _names.mount){const field=get(_fields,name);if(field&&field._f){const fieldReference=Array.isArray(field._f.refs)?field._f.refs[0]:field._f.ref;if(isHTMLElement(fieldReference)){const form=fieldReference.closest("form");if(form){form.reset();break}}}}_fields={}}_formValues=props.shouldUnregister?keepStateOptions.keepDefaultValues?cloneObject(_defaultValues):{}:cloneObject(values),_subjects.array.next({values:{...values}}),_subjects.values.next({values:{...values}})}_names={mount:keepStateOptions.keepDirtyValues?_names.mount:new Set,unMount:new Set,array:new Set,watch:new Set,watchAll:!1,focus:""},_state.mount=!_proxyFormState.isValid||!!keepStateOptions.keepIsValid||!!keepStateOptions.keepDirtyValues,_state.watch=!!props.shouldUnregister,_subjects.state.next({submitCount:keepStateOptions.keepSubmitCount?_formState.submitCount:0,isDirty:!isEmptyResetValues&&(keepStateOptions.keepDirty?_formState.isDirty:!(!keepStateOptions.keepDefaultValues||deepEqual(formValues,_defaultValues))),isSubmitted:!!keepStateOptions.keepIsSubmitted&&_formState.isSubmitted,dirtyFields:isEmptyResetValues?{}:keepStateOptions.keepDirtyValues?keepStateOptions.keepDefaultValues&&_formValues?getDirtyFields(_defaultValues,_formValues):_formState.dirtyFields:keepStateOptions.keepDefaultValues&&formValues?getDirtyFields(_defaultValues,formValues):keepStateOptions.keepDirty?_formState.dirtyFields:{},touchedFields:keepStateOptions.keepTouched?_formState.touchedFields:{},errors:keepStateOptions.keepErrors?_formState.errors:{},isSubmitSuccessful:!!keepStateOptions.keepIsSubmitSuccessful&&_formState.isSubmitSuccessful,isSubmitting:!1})},reset=(formValues,keepStateOptions)=>_reset(isFunction(formValues)?formValues(_formValues):formValues,keepStateOptions);return{control:{register:register,unregister:unregister,getFieldState:getFieldState,handleSubmit:handleSubmit,setError:setError,_executeSchema:_executeSchema,_getWatch:_getWatch,_getDirty:_getDirty,_updateValid:_updateValid,_removeUnmounted:()=>{for(const name of _names.unMount){const field=get(_fields,name);field&&(field._f.refs?field._f.refs.every((ref=>!live(ref))):!live(field._f.ref))&&unregister(name)}_names.unMount=new Set},_updateFieldArray:(name,values=[],method,args,shouldSetValues=!0,shouldUpdateFieldsAndState=!0)=>{if(args&&method&&!_options.disabled){if(_state.action=!0,shouldUpdateFieldsAndState&&Array.isArray(get(_fields,name))){const fieldValues=method(get(_fields,name),args.argA,args.argB);shouldSetValues&&set(_fields,name,fieldValues)}if(shouldUpdateFieldsAndState&&Array.isArray(get(_formState.errors,name))){const errors=method(get(_formState.errors,name),args.argA,args.argB);shouldSetValues&&set(_formState.errors,name,errors),unsetEmptyArray(_formState.errors,name)}if(_proxyFormState.touchedFields&&shouldUpdateFieldsAndState&&Array.isArray(get(_formState.touchedFields,name))){const touchedFields=method(get(_formState.touchedFields,name),args.argA,args.argB);shouldSetValues&&set(_formState.touchedFields,name,touchedFields)}_proxyFormState.dirtyFields&&(_formState.dirtyFields=getDirtyFields(_defaultValues,_formValues)),_subjects.state.next({name:name,isDirty:_getDirty(name,values),dirtyFields:_formState.dirtyFields,errors:_formState.errors,isValid:_formState.isValid})}else set(_formValues,name,values)},_updateDisabledField:_updateDisabledField,_getFieldArray:name=>compact(get(_state.mount?_formValues:_defaultValues,name,props.shouldUnregister?get(_defaultValues,name,[]):[])),_reset:_reset,_resetDefaultValues:()=>isFunction(_options.defaultValues)&&_options.defaultValues().then((values=>{reset(values,_options.resetOptions),_subjects.state.next({isLoading:!1})})),_updateFormState:updatedFormState=>{_formState={..._formState,...updatedFormState}},_disableForm:disabled=>{isBoolean(disabled)&&(_subjects.state.next({disabled:disabled}),iterateFieldsByAction(_fields,((ref,name)=>{const currentField=get(_fields,name);currentField&&(ref.disabled=currentField._f.disabled||disabled,Array.isArray(currentField._f.refs)&&currentField._f.refs.forEach((inputRef=>{inputRef.disabled=currentField._f.disabled||disabled})))}),0,!1))},_subjects:_subjects,_proxyFormState:_proxyFormState,_setErrors:errors=>{_formState.errors=errors,_subjects.state.next({errors:_formState.errors,isValid:!1})},get _fields(){return _fields},get _formValues(){return _formValues},get _state(){return _state},set _state(value){_state=value},get _defaultValues(){return _defaultValues},get _names(){return _names},set _names(value){_names=value},get _formState(){return _formState},set _formState(value){_formState=value},get _options(){return _options},set _options(value){_options={..._options,...value}}},trigger:trigger,register:register,handleSubmit:handleSubmit,watch:(name,defaultValue)=>isFunction(name)?_subjects.values.subscribe({next:payload=>name(_getWatch(void 0,defaultValue),payload)}):_getWatch(name,defaultValue,!0),setValue:setValue,getValues:getValues,reset:reset,resetField:(name,options={})=>{get(_fields,name)&&(isUndefined(options.defaultValue)?setValue(name,cloneObject(get(_defaultValues,name))):(setValue(name,options.defaultValue),set(_defaultValues,name,cloneObject(options.defaultValue))),options.keepTouched||unset(_formState.touchedFields,name),options.keepDirty||(unset(_formState.dirtyFields,name),_formState.isDirty=options.defaultValue?_getDirty(name,cloneObject(get(_defaultValues,name))):_getDirty()),options.keepError||(unset(_formState.errors,name),_proxyFormState.isValid&&_updateValid()),_subjects.state.next({..._formState}))},clearErrors:name=>{name&&convertToArrayPayload(name).forEach((inputName=>unset(_formState.errors,inputName))),_subjects.state.next({errors:name?_formState.errors:{}})},unregister:unregister,setError:setError,setFocus:(name,options={})=>{const field=get(_fields,name),fieldReference=field&&field._f;if(fieldReference){const fieldRef=fieldReference.refs?fieldReference.refs[0]:fieldReference.ref;fieldRef.focus&&(fieldRef.focus(),options.shouldSelect&&isFunction(fieldRef.select)&&fieldRef.select())}},getFieldState:getFieldState}}function useForm(props={}){const _formControl=React.useRef(),_values=React.useRef(),[formState,updateFormState]=React.useState({isDirty:!1,isValidating:!1,isLoading:isFunction(props.defaultValues),isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,submitCount:0,dirtyFields:{},touchedFields:{},validatingFields:{},errors:props.errors||{},disabled:props.disabled||!1,defaultValues:isFunction(props.defaultValues)?void 0:props.defaultValues});_formControl.current||(_formControl.current={...createFormControl(props),formState:formState});const control=_formControl.current.control;return control._options=props,useSubscribe({subject:control._subjects.state,next:value=>{shouldRenderFormState(value,control._proxyFormState,control._updateFormState)&&updateFormState({...control._formState})}}),React.useEffect((()=>control._disableForm(props.disabled)),[control,props.disabled]),React.useEffect((()=>{if(control._proxyFormState.isDirty){const isDirty=control._getDirty();isDirty!==formState.isDirty&&control._subjects.state.next({isDirty:isDirty})}}),[control,formState.isDirty]),React.useEffect((()=>{props.values&&!deepEqual(props.values,_values.current)?(control._reset(props.values,control._options.resetOptions),_values.current=props.values,updateFormState((state=>({...state})))):control._resetDefaultValues()}),[props.values,control]),React.useEffect((()=>{props.errors&&control._setErrors(props.errors)}),[props.errors,control]),React.useEffect((()=>{control._state.mount||(control._updateValid(),control._state.mount=!0),control._state.watch&&(control._state.watch=!1,control._subjects.state.next({...control._formState})),control._removeUnmounted()})),React.useEffect((()=>{props.shouldUnregister&&control._subjects.values.next({values:control._getWatch()})}),[props.shouldUnregister,control]),_formControl.current.formState=getProxyFormState(formState,control),_formControl.current}export{useForm};